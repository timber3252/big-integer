#include "big_integer.h"

#define CATCH_CONFIG_MAIN
#include <catch2/catch.hpp>

TEST_CASE("BigInteger", "[BigInteger]") {
  SECTION("Constructor & Destructor") {
    BigInteger<2048> $1;
    BigInteger<2048> $2(23333333333333333LL);
    BigInteger<2048> $3("23333333333333333");
    BigInteger<2048> $4($3);

    REQUIRE($2 == $3);
    REQUIRE($2 == $4);
  }

  SECTION("Copy & Swap") {
    BigInteger<2048> $1("233333333333333333333333333333333333333333333333333");
    BigInteger<2048> $2 = $1;

    REQUIRE($2 == $1);

    BigInteger<2048> $3;
    $3.swap($2);

    REQUIRE($3 == $1);
  }

  SECTION("Operator Add Base") {
    BigInteger<2048> $1("23333333333333333");

    REQUIRE($1 + 99999999999999999ULL == BigInteger<2048>("123333333333333332"));
    REQUIRE($1 + "99999999999999999" == BigInteger<2048>(123333333333333332ULL));
    REQUIRE($1 + BigInteger<2048>(99999999999999999ULL) == BigInteger<2048>("123333333333333332"));

    BigInteger<2048> $2("16158503035655503650357438344334975980222051334857742016065172713762327569433945446598600705761456731844358980460949009747059779575245460547544076193224141560315438683650498045875098875194826053398028819192033784138396109321309878080919047169238085235290822926018152521443787945770532904303776199561965192760957166694834171210342487393282284747428088017663161029038902829665513096354230157075129296432088558362971801859230928678799175576150822952201848806616643615613562842355410104862578550863465661734839271290328348967522998634176499319107762583194718667771801067716614802322659239302476074096777926805529798115328");
    REQUIRE($2 + $2 == 0);

    BigInteger<2048> $3("5728913789127598127893712985712893798127598172893");
    BigInteger<2048> $4("275981278941982758912739812798571298739812789798");

    REQUIRE($3 + $4 == "6004895068069580886806452798511465096867410962691");

    BigInteger<2048> $5("25619459773504298191622111661568306382767147665031604558176917703473280927340656049665393065805109605222088627628425392083515674460270071565714306521246643899330384475329600838865514797718453299607102109316948731227396638986116812935410218881445103771039454069930541302888677699089869110486999821374528422573349017583624039854806600464895544511265589087640012571262903590041404654766616718930962641971219791087270383842155792619755056444644623893803680927967407833732361940820171852358394482161130706823443693568717966134554643546069719803978110799547387128016811637784963091972112927809591208227046397766645553862875672543663434383534672712439995473690773031964934376180666016971552662303806037587393267037081077022979490630577576651863710700586840223474416538876151123638773414799546060054166086092171054218943375006613923534007172281348081598684689157717386968442659205219381970822290262736232884351415422047241207118831947678652104470290155827683065421777555122638694524007890812089336302546203397930565403812390328786931344718390222366047085668071103964316827814391004854423500426917189467162089086536533795938804803068636692033419887660049157729540999990058177406178506623000394350635560262698691378672873581152816498505423031807226157682834462805274690124122114183931709990172536800793212958121806508406199145762032914086534952293045048432235590456301646633845130395974027901991151856727582755939938652585928669995299291625280863419869014232399755097121794850912806723254495597843808306250424899198560530258303692108496699497530730568192695436253363745348741372193389910128921673449465327171985355760826858024491778776257079536953082097584651514345192908646186164187448145293965947376509215133842967359509772176668898747198873022696149694410914258077758170722403631837495922040419882456339818311820462835059480895289734496827209963508853561311208467060358482673759502101948179742608360077101848803036261359540072456636400194385628584745460840202810810510394574686102217927860139328177541168915658025707156059647545767231722582203389851619779783362501216973975596839576528995889613720926520935551191399827129312962824340488212992059591706082467868156362160093585755304718564514209180670283989837717599335098434486421488884854475265890015302504654598512369483754695594354784474046995087594514095086088593984342493786807059001031297472077669858289722851714769095245448875483195460984922570965432312251909815384367683510491359355771842977311360703442879917178593212489820581960919198796975629685269574581047275504510254102478397419824596198173624276820558568798947413231719431597339486072800365690775280828628178577668787412488614709276449202140507");
    REQUIRE($5 + $5 == "13404627856911328338378925625415313709310138639847407336635748637867487273985791119169828189345292644595750146622326946586194418318058851998032509691089675619069489734785183211251359878420596791251416581900027633323217945977149339597511105788350397112028588959912247638185470622153926513682345809781526989469347682347558811353538245036213339009799968135036052965834922488336254111740660120174073031164880553831452021569078721191058309472235654342714625141810772021951870546739399003768577945764189326675318752905644593878630518637501673852633890770005047296595728319957849561269131919551835642805566369054262110775990");
  }

  SECTION("Operator Sub Base") {
    BigInteger<2048> $1("23333333333333333");
    REQUIRE($1 - 99999999999999999ULL == BigInteger<2048>("32317006071311007300714876688669951960444102669715484032130345427524655138867890893197201411522913463688717960921898019494119559150490921095088152386448283120630877367300996091750197750389652106796057638384067568276792218642619756161838094338476170470581645852036305042887575891541065808607552399123930385521914333389668342420684974786564569494856176035326322058077805659331026192708460314150258592864177116725943603718461857357598351152301645904403697613233287231227125684710820209725157101726931323469678542580656697935045997268352998638215525166389437335543602135433229604645318478604952148193555776944392929563990"));

    BigInteger<2048> $2(123333333333333332ULL);
    REQUIRE($2 - 99999999999999999ULL == "23333333333333333");

    BigInteger<2048> $3("187492638214351905367728143929836909460923493556049254929270348243201169625497097406565086752770904387613872862274463120104257676130223166785541292430997682832165958884661296135022352565464398369822295116322966171839683786938581655992511300336949086269214221235067512075819470919336139666888392803633989024008004835866992627111197926347395904145181804573192476997979522109740163671156338328206512750592");
    BigInteger<2048> $4("36360291795869936842385267079543319118023385026001623040346035832580600191583895484198508262979388783308179702534403855752855931517013066142992430916562025780021771247847643450125342836565813209972590371590152578728008385990139795377610001");
    REQUIRE($3 - $4 == "187492638214351905367728143929836909460923493556049254929270348243201169625497097406565086752770904387613872862274463120104257676130223166785541292430997682832165922524369500265085510180197318826503177092937940170216643440902749075392319716441464887760951241846284203896116936515480386810956875790567846031577088273841212605339950078703945778802345238759982504407607931957161435662770348188411135140591");

    BigInteger<2048> $5("9568608597684407188779914612204636482412966447596629701306909435005092668428100409377159145511580467606564232164170299532937271511631321063129746317209823550304975306757753671609596617701588674457707314003068121083313527426569392266551831102216395670350346519558187751425563723696915306687993308417566228775220316534344245410562206534986241124156308594702734617018784809487681985896930632206292638619798614012775566011620683269956968467663417946586130046303744490451518990948157781427155654865939733197648841198978552182946625821382123733330319740458632679883937865762606921793170278682358012265359927196218953466336");
    BigInteger<2048> $6("13407265560540057458498976241011617851726942722467048115303689565042879833435519501131354445099593727286458249581941556507095603367952925008833343053455225171638899764383711456406793489121891008267105434069681309115128924690872268985183880584930832794874287571483623760413563651922625762523147943834071761881031515510713957765299920436069049384364949927237188984766004653788364823571691930326385162455773520774901630918127394955294559155392860757201807158270711696454796049279849924849981212724980019002767735988331468632839237859106656768612438428960337505063950468093562724129053890151929678611766068905435355768336");
    REQUIRE($5 - $6 == "28478349108455357030995815059862970591130126394845065618133565297486867973860471801443006111934900204008823943504126762519961227294169317149384555650202881499296952909675038306953000878969349772986659518317454380244976821378316879443206044855761733346057704800110869033899575963315355352772397763707424852416103134413298630065947260885481761234647534702791867690330585815030343355033699016030166069028202209963817538811955145672260760464572203093788020501266320025223848626379128066302331543867891037664559647791303781485153385230628465602933406477887732510363589533102273802309434867135380481847149711901843193928656");
  }

  SECTION("Operator Mul Base") {
    BigInteger<2048> $1("23333333333333333333333333333333333333");
    BigInteger<2048> $2("6666666666666666666666666666666666666666666666666666");

    REQUIRE($1 * $2 == "155555555555555555555555555555555555553333333333333317777777777777777777777777777777777778");

    BigInteger<2048> $3("23333333333333333333333333333333333333");
    BigInteger<2048> $4("16158503035655503650357438344334975980222051334857742016065172713762327569433945446598600705761456731844358980460949009747059779575245460547544076193224141560315438683650498045875098875194826053398028819192033784138396109321309878080919047169238085235290822926018152521443787945770532904303776199561965192760957166694834171210342487393282284747428088017663161029038902829665513096354230157075129296432088558362971801859230928678799175576150822952201848806616643615613562842355410104862578550863465661734839271290328348967522998634176499319107762583194718667771801067716614802322659239302476074096777926805529798115328");
    REQUIRE($3 * $4 == "16158503035655503650357438344334975980222051334857742016065172713762327569433945446598600705761456731844358980460949009747059779575245460547544076193224141560315438683650498045875098875194826053398028819192033784138396109321309878080919047169238085235290822926018152521443787945770532904303776199561965192760957166694834171210342487393282284747428088017663161029038902829665513096354230157075129296432088558362971801859230928678799175576150822952201848806616643615613562842355410104862578550863465661734839271290328348967522998634176499319107762583194718667771801067716614802322659239302476074096777926805529798115328");

    BigInteger<2048> $5("1372857127317598273275982173712579813");
    BigInteger<2048> $6("5721342175912432572171759823251892321");
    REQUIRE($5 * $6 == "7854585384024159180503781575896093805161643924039976420845340014994315973");
  }

  SECTION("Operator Mul Karatsuba") {
    BigInteger<2048> $1("6137047109064509203514107793344600160620074883510947842704523138821308183503352732223401021182115411146312678659135482269468264289485774342641392787301054673358216240434807945812252887397143995864351468353738843254686336162932482372987551953090102952140065275185040196916745736776974963065827275165720749163434684942856560446032061120141383975163722533431565198366048716687453222036843014380982373173860063332282137583559512785293935436586333121902790067518333050866910242585475838879595178302806267976605546434700534596430623482343709835042890322148935550664649746513097098179382722173326829317074194319228559702809");
    REQUIRE($1 * $1 == "5075632150375165402862065205682293457312202835148544894208934342377602549410613318510323810640610917484561287041923086467982543025046305788226615313125934921910309633800663170973546550490613204462751882022280407409237341627686840320289672416154518460800646939611951476859442849268331215844276399359539337040919207719637338775659643455607724854959976258786241538401917000648224308648206025675976923210099047265239397845389415208888860157461770573225416027017833422363806547144483583679390723139709692759723452163397038235100991503090959578263202041273099747589915193308061540321328322133862365634531201024356828088433");

    BigInteger<2048> $2("32317006071311007300714876688669951960444102669715484032130345427524655138867890893197201411522913463688717960921898019494119559150490921095088152386448283120630877367300996091750197750389652106796057638384067568276792218642619756161838094338476170470581645852036305042887575891541065808607552399123930385521914333389668342420684974786564569494856176035326322058077805659331026192708460314150258592864177116725943603718461857357598351152301645904403697613233287231227125684710820209725157101726931323469678542580656697935045997268352998638215525166389437335543602135433229604645318478604952148193555853611059596230655");
    REQUIRE($2 * $2 == "1");

    REQUIRE($1 * $2 == "26179958962246498097200768895325351799824027786204536189425822288703346955364538160973800390340798052542405282262762537224651294861005146752446759599147228447272661126866188145937944862992508110931706170030328725022105882479687273788850542385386067518441580576851264845970830154764090845541725123958209636358479648446811781974652913666423185519692453501894756859711756942643572970671617299769276219690317053393661466134902344572304415715715312782500907545714954180360215442125344370845561923424125055493072996145956163338615373786009288803172634844240501784878952388920132506465935756431625318876481659291831036527847");
  }

  SECTION("Operator Div Sub") {
    BigInteger<2048> $1("57219834798127598127983412789571982738912789572897389127839412957");
    BigInteger<2048> $2("2333333333333333333333333333333333333");

    REQUIRE($1 / $2 == "24522786342054684911992891195");

    BigInteger<2048> $3("257981237127893");
    bool flag = false;
    try {
      auto $ = $3 / 0;
    } catch (std::exception &e) {
      flag = true;
    }
    REQUIRE(flag == true);

    BigInteger<2048> $4("2333333");
    BigInteger<2048> $5("5555555");

    REQUIRE($4 / $5 == 0);
  }

  SECTION("Operator Div Binary Search") {
    BigInteger<4096> $1("2503920051251275111885028959335509948958343902861378456932112059725668578401643241764117887151528946013038685382841623063429924836563448983554367794606010532143073372870384393955838234793348568205781081390783933502228692898595747678367238101283195539244202963440256373108961664542117510741430327178151510026190800655538419749774867223706881930523045459274825683526763536480927907610825769993884165206328413114934776565342311110444439780293315154758347899949753439376980501074667758373439259498317103860769255243888863260296594119344291451120178485234065593136618239967162088962426645719090222428756093453969904919741");
    BigInteger<4096> $2("26497193280085775033748772485232013393096317938197183174571608164109601148001012909999794977926686618753462864342128648299434844813335387425005521055677061884348737974128314809923784265170877871333639027449233771102002075133032289753893915827471052620197317333931776582928484123739150359351839582832514623603285154211273994958898136102653156558977091116589323687712695008626796275882125249769710369092425979373832326085081157334973579864975863711867219153335230397453880498476678958533725185094991481943605081545647526217394319753564168734064434094455390269181895101751208870976952721745819043651430239694");
    REQUIRE($1 / $2 == "94497557714");

    BigInteger<4096> $3("48070880771127017833418400063860424893242447244924514895934503717501143296921795358699176265818477116722784375947578590606979154024171864166329574817483293881028710535973176979596219731991520830514694374771774636807890694422882343405923800484901643617730596619404600897026159986915501340493142975234272618070552045897911225971238672179839452802948951292415324993705491602964046899687216179315011278589147831368447276641586915959626203950458493082639154256082431390089707830063939127099439149976981589631028284734703098118977079002245835870735258166305134365786114813430895809196712363741859052802752740452546018161315848383393769720388551835786294645941781480734757813395139416102084849079404619569979968322432830001");
    BigInteger<4096> $4("490909346529772655309577195498627564297521551249944956511154911718710525472171585646009788403733195227718357156513187851316791861042471890280751482410896345225310546445986192853894181098439730703830718994140625");

    REQUIRE($3 / $4 == "97922113544871398164878214675447035195812291171488889445796676142380475501453982553742235887264023453383217882022279378559476990678932073561280082032475746814313691818658565960687094689604490352546120757623011045052352485642974970363888989600967676996166103141132762739350405320610365871068455087725110498030608452298472636421956096872097580573845086576113032951463108683227256647694086286409628286286824857827930877884786103340357141329773540209045435704778279247942763533653559478810097953588974178738898");

    REQUIRE($1 / $4 == "5100575226264137637055354122532104233227257212153152776748172316767527181479098983766790582564850732396979678738286343757606458854270820343313460713982671484022573073284340588795114295264033144248824891789299633517298302727411838982834859154856486638188558784975539571545809478447383656601636019333057808812320408675459265473332510460197972112915301792457659239884205157566629174515391166231321788199873258");
  }

  SECTION("Operator Pow") {
    BigInteger<2048> $1("6137047109064509203514107793344600160620074883510947842704523138821308183503352732223401021182115411146312678659135482269468264289485774342641392787301054673358216240434807945812252887397143995864351468353738843254686336162932482372987551953090102952140065275185040196916745736776974963065827275165720749163434684942856560446032061120141383975163722533431565198366048716687453222036843014380982373173860063332282137583559512785293935436586333121902790067518333050866910242585475838879595178302806267976605546434700534596430623482343709835042890322148935550664649746513097098179382722173326829317074194319228559702809");
    REQUIRE(($1 ^ $1) == "30277429100831583740641387982865525050824493692368117709050251714326926367544510489668751050789935377920268462039041356148714214929502156411729323827402181006162013107140813427603575134290786722402929967294743578720059525757113822852086886591571921123052341966183072681763348899456066948052452054741344174030300742548491074496175879237685834051642898397648219710872388092485427628827205009855084339929297314175295499613386076937683726645695520610439364567065214113360640627394604028807224458156777478878722071624011169717295833493432948942152724736141790313733089660780962304515088925239617887852268303601597416921177");

    BigInteger<2048> $2("571379827598172983719825719823789127589127984127985172983712895712897389127589127389127895612789471298564387561349875681456798341568791345687931658713465871");
    REQUIRE(($2 ^ $2) == "13615198422178218899340214381259384244727185755950535477863074841690552190867352323284221785102081519979226722587845445647015793599684435544237843217049286086667024929576674413842599697979901114466605541448081188583423636489658400253623254602927081021884454598031463390138347363597232580077851990181217865832123107207980113995698528503807604972890183240328367496266358760768824819524243381854244537229506776745799899113939750591369590209237530974398625275342274385913740790265026583302717957875483324393873702966375166291210261562082396522319838384912376613327179810445235522311782017499086805260437270581491288277999");
  }

  SECTION("Input Output") {
    std::string s0, s = "32317006071311007300714876688669951960444102669715484032130345427524655138867890893197201411522913463688717960921898019494119559150490921095088152386448283120630877367300996091750197750389652106796057638384067568276792218642619756161838094338476170470581645852036305042887575891541065808607552399123930385521914333389668342420684974786564569494856176035326322058077805659331026192708460314150258592864177116725943603718461857357598351152301645904403697613233287231227125684710820209725157101726931323469678542580656697935045997268352998638215525166389437335543602135433229604645318478604952148193555853611059596230655";

    std::stringstream ss, so;
    ss << s;

    BigInteger<2048> $1(s), $2;

    ss >> $2;
    REQUIRE($1 == $2);

    so << $2;
    so >> s0;
    REQUIRE(s0 == s);

    std::string bb = "abcd";
    std::stringstream si(bb);
    bool flag = false;

    try {
      si >> $2;
    } catch (std::exception &e) {
      flag = true;
    }

    REQUIRE(flag == true);
  }

  SECTION("Radix") {
    BigInteger<2048> $1("32317006071311007300714876688669951960444102669715484032130345427524655138867890893197201411522913463688717960921898019494119559150490921095088152386448283120630877367300996091750197750389652106796057638384067568276792218642619756161838094338476170470581645852036305042887575891541065808607552399123930385521914333389668342420684974786564569494856176035326322058077805659331026192708460314150258592864177116725943603718461857357598351152301645904403697613233287231227125684710820209725157101726931323469678542580656697935045997268352998638215525166389437335543602135433229604645318478604952148193555853611059596230655");

    REQUIRE($1.bin
    REQUIRE($1.hex() == "ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
    REQUIRE($1.dec() == "32317006071311007300714876688669951960444102669715484032130345427524655138867890893197201411522913463688717960921898019494119559150490921095088152386448283120630877367300996091750197750389652106796057638384067568276792218642619756161838094338476170470581645852036305042887575891541065808607552399123930385521914333389668342420684974786564569494856176035326322058077805659331026192708460314150258592864177116725943603718461857357598351152301645904403697613233287231227125684710820209725157101726931323469678542580656697935045997268352998638215525166389437335543602135433229604645318478604952148193555853611059596230655");

    BigInteger<2048> $2("2333333333333333333333333333333333333333333333333333333");
    REQUIRE($2.bin() == "1100001011100011100110111010000011000010000001100010100100001001110111011101001101010011011111110110111101001110011111010101010010101010101010101010101010101010101010101010101010101");
    REQUIRE($2.hex() == "185c73741840c5213bba6a6fede9cfaa95555555555555");
    REQUIRE($2.dec() == "2333333333333333333333333333333333333333333333333333333");

    BigInteger<2048> $3 = BigInteger<2048>::from_bin("1100001011100011100110111010000011000010000001100010100100001001110111011101001101010011011111110110111101001110011111010101010010101010101010101010101010101010101010101010101010101");
    REQUIRE($3 == $2);

    BigInteger<2048> $4 = BigInteger<2048>::from_hex("185c73741840c5213bba6A6fede9cfaa95555555555555");
    REQUIRE($4 == $2);

    BigInteger<2048> $5 = BigInteger<2048>::from_dec("2333333333333333333333333333333333333333333333333333333");
    REQUIRE($5 == $2);

    bool flag = false;
    try {
      BigInteger<2048> $6 = BigInteger<2048>::from_bin("210003");
    } catch (std::exception &e) {
      flag = true;
    }
    REQUIRE(flag == true);
  }
}